#!/bin/env python

import re

header          = r'(^\S+) (\S+) (v[0-9].[0-9].[0-9]) (.*)\n\S+ (\d+)\n\S+ (\d+)\n\S+ (\S+)\n'
                   
day             = r'Sun|Mon|Tue|Wed|Thu|Fri|Sat'
month           = r'Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec'
                   
                     #'zzz ***Wed Nov 28 13:00:13 CST 2018
timestamp      = r'^zzz \*\*\*(' + day + ') +(' + month + ') +([0-9]|[0-9][0-9]) +([0-9][0-9]:[0-9][0-9]:[0-9][0-9]) +(\S+) +(\d+)\s*\n'
                   
                     #'procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----\n'
title1          = r'(procs -+memory-+ -+swap-+ -+io-+ -+system-+ -+cpu-+)\s*\n'
                   
                     #' r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n'
title2          = r' +(r +b +swpd +free +buff +cache +si +so +bi +bo +in +cs us +sy +id +wa +st)\s*'
                   
                      #'18 25      0 76877840 353404 19741680    0    0  8891   787   13    5 13  4 69 15  0	
data            = r'(( *\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+ +\d+\s*)+)\t\n'
                   
header_pattern  = re.compile(header, re.MULTILINE)

data_pattern    = re.compile(timestamp + title1 + title2 + data + data + data, re.MULTILINE)

vmstat           = """Linux OSWbb v7.3.3 tmprorasapl01
SNAP_INTERVAL 30
CPU_COUNT 32
OSWBB_ARCHIVE_DEST /u01/OSWATCHER/oswbb/archive
zzz ***Wed Nov 28 13:00:13 CST 2018
procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
18 25      0 76877840 353404 19741680    0    0  8891   787   13    5 13  4 69 15  0	
23 24      0 76841024 353404 19742436    0    0 374305 119063 178744 155863 45 13 18 25  0	
34 36      0 76813960 353404 19741592    0    0 383510 136384 175088 152686 45 11 19 25  0	
zzz ***Wed Nov 28 13:00:43 CST 2018
procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
20 10      0 76926992 353580 19742388    0    0  8892   789   15    6 13  4 69 15  0	
17 10      0 76929872 353592 19743112    0    0 279327 64790 120338 108122 35  8 37 19  0	
 6 16      0 76933536 353596 19743100    0    0 333712 91246 142542 133356 39  8 36 17  0	
zzz ***Wed Nov 28 13:01:13 CST 2018
procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
15 18      0 76696296 353676 19742872    0    0  8892   789    1    8 13  4 69 15  0	
 8 18      0 76690784 353676 19743620    0    0 302065 47135 124964 114157 27  8 39 25  0	
16 20      0 76688984 353680 19743320    0    0 302332 63920 118568 113109 23  6 49 22  0	
"""

find_iter = header_pattern.finditer(vmstat)

matches = []
for m in find_iter:
  matches.append(m)
  
for m in matches:
  s = m.start()
  e = m.end()
  
  #print(' Position: %d-%d' % (s,e))
  print('     Span: %s' % repr(m.span()))
  #print('    Start: %s' % s)
  #print('      End: %s' % e)
#  print('    Group: %s' % repr(m.group()))
  print('   Groups: %s' % repr(m.groups()))
#  print('GroupDict: %s' % m.groupdict())
#  print('LastGroup: %s' % m.lastgroup)
#  print('LastIndex: %s' % m.lastindex)
  #print('      Pos: %s' % m.pos)
  print('       Re: %s' % m.re)
#  print('     Regs: %s' % repr(m.regs))
#  print('   String: %s' % m.string)
 # print('    Found: %s' % data[6:11])
#  print('    Found: %s' % data[s:e])
  print('---------')

#print('\n\n--- Sec 3 ---------------------')
#
#found = pattern.search(data)
#
#if (found):
#  s = found.start()
#  e = found.end()
#  
#  print('')
#  print(' Position: %d-%d' % (s,e))
#  print('   Groups: %s' % str(found.groups()))
#  print('     Span: %s' % repr(found.span()))
#  print('    Start: %s' % s)
#  print('      End: %s' % e)
#  print('     Data: %s' % data[s:e])
#
#exit()
#print('\n\n--- Sec 4 ---------------------')
#
#found = pattern.split(data)
#
#if (found):
#  print(found[0])
#  print(found[1])
#  print(found[2])
#  print(found[3])
#  print(found[4])
#