#!/bin/env python

##################################################################################################
# Name:        ps_gatherstats                                                                    #
# Author:      Randy Johnson                                                                     #
# Description: Reports SQL Plan Changes                                                          #
#                                                                                                #
# History:                                                                                       #
#                                                                                                #
# Date       Ver. Who              Change Description                                            #
# ---------- ---- ---------------- ------------------------------------------------------------- #
# 09/21/2017 1.00 Randy Johnson    Initial write.                                                #
##################################################################################################

# --------------------------------------
# ---- Import Python Modules -----------
# --------------------------------------
from optparse     import OptionParser
from os           import environ
from os.path      import basename
from signal       import SIG_DFL
from signal       import SIGPIPE
from signal       import signal
from sys          import argv
from sys          import exit
from sys          import version_info
from Oracle       import ParseConnectString
from Oracle       import RunSqlplus
from Oracle       import SetOracleEnv


# --------------------------------------
# ---- Main Program --------------------
# --------------------------------------
if (__name__ == '__main__'):
  Cmd            = basename(argv[0]).split('.')[0]
  CmdDesc        = 'PS Gather Stats'
  Version        = '1.00'
  VersionDate    = 'Mon Oct 2 18:13:29 EDT 2017'
  DevState       = 'Production'
  Banner         = CmdDesc + ': Release ' + Version + ' '  + DevState + '. Last updated: ' + VersionDate
  Sql            = ''
  SqlHeader      = '/***** ' + CmdDesc.upper() + ' *****/'
  ErrChk         = False
  ArgParser      = OptionParser()
  InStr          = ''
  TnsName        = ''
  Username       = ''
  Password       = ''
  ConnStr        = ''

  # For handling termination in stdout pipe; ex: when you run: oerrdump | head
  signal(SIGPIPE, SIG_DFL)

  Usage  = '\n\n-------------------------------------------------------------------------------'
  Usage += '\nGather Stale/Missing Stats for Peoplesoft Database'
  ArgParser = OptionParser(Usage)

  ArgParser.add_option('--s', dest='Show',     action='store_true', default=False,           help="print SQL query.")
  ArgParser.add_option('--v', dest='ShowVer',  action='store_true', default=False,           help="print version info.")

  # Parse command line arguments
  Options, args = ArgParser.parse_args()

  Show      = Options.Show
  ShowVer   = Options.ShowVer

  if (ShowVer):
    print('\n%s' % Banner)
    exit()

  Sql += "set serveroutput on size unlimited\n"
  Sql += "\n"
  Sql += "exec DBMS_STATS.GATHER_DATABASE_STATS ( cascade => TRUE,options => 'LIST AUTO')\n"
  Sql += "\n"
  Sql += "DECLARE\n"
  Sql += "   a dbms_stats.ObjectTab;\n"
  Sql += "\n"
  Sql += "BEGIN\n"
  Sql += "  DBMS_STATS.GATHER_DATABASE_STATS(OPTIONS => 'LIST AUTO', OBJLIST => a);\n"
  Sql += "\n"
  Sql += "  FOR i in a.first .. a.last\n"
  Sql += "     LOOP\n"
  Sql += "        DBMS_OUTPUT.PUT_LINE(a(i).ownname || '~' || a(i).objtype  || '~' || a(i).objname );\n"
  Sql += "     END LOOP;\n"
  Sql += "END;\n"
  Sql += "/"

  Sql = Sql.strip()

  if(Show):
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    print(Sql)
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    exit()

  # Check/setup the Oracle environment
  if (not('ORACLE_SID' in list(environ.keys()))):
    print('ORACLE_SID is required.')
    exit(1)
  else:
    # Set the ORACLE_HOME just in case it isn't set already.
    if (not('ORACLE_HOME' in list(environ.keys()))):
      (OracleSid, OracleHome) = SetOracleEnv(environ['ORACLE_SID'])

  # Parse the connect string if any, prompt for username, password if needed.
  if (len(args) > 0 and Show == False):
    InStr = args[0]
    ConnStr = ParseConnectString(InStr)

  # Execute the report
  if (ConnStr != ''):
    (Stdout) = RunSqlplus(Sql, ErrChk, ConnStr)
  else:
    (Stdout) = RunSqlplus(Sql, ErrChk)

  ObjList = []
  Owner = ''
  Name  = ''
  Type  = ''
  for rec in Stdout.split('\n'):
    (Owner, Name, Type) = rec.split('~')
    print(Owner, Name, Type)
    ObjList.append([Owner, Name, Type])
    

  exit(0)
# --------------------------------------
# ---- End Main Program ----------------
# --------------------------------------
